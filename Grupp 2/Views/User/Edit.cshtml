@model Data.Models.User

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@if (null != TempData["alertMessage"])
{
    <script type="text/javascript">
    alert('@TempData["alertMessage"]');
    </script>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserID)


        @*Gör emailen inte editbar, men visar vad han e inloggad med*@

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Adress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrivateProfile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PrivateProfile)
                    @Html.ValidationMessageFor(model => model.PrivateProfile, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GithubUsername, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.GithubUsername)
                    @Html.ValidationMessageFor(model => model.GithubUsername, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>

    <div class="form-group">
        
            @Html.ActionLink("Byt lösenord", "ChangePassword", "Manage")
        
    </div>
    }


    <hr />
    @using (Html.BeginForm("DeactivateUser", "User", FormMethod.Post))

    {
        @Html.AntiForgeryToken()
        <h2> Avaktivera ditt konto</h2>
        <p>Du kommer inte längre synas på hemsidan, men om du loggar in igen kommer du att återaktiveras</p>
        <input type="submit" value="Deactivate" class="btn btn-primary" />
    }

    <hr />
    <div>
        @Html.RouteLink("Ditt CV", "ShowUserCV", new { userid = Model.UserID })
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
